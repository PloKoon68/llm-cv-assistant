# --- Stage 1: The Builder ---
# Use a full Python image to build dependencies
FROM python:3.11-slim as builder

# Set the working directory
WORKDIR /app

# Install build dependencies if any are needed (good practice)
# For pdfplumber, sometimes system libraries are needed for its dependencies like Pillow
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy only the requirements file to leverage Docker cache
COPY ./requirements.txt .

# Install the dependencies
RUN pip wheel --no-cache-dir --wheel-dir /wheels -r requirements.txt


# --- Stage 2: The Final Production Image ---
# Use a lightweight "slim" version of Python for the final image
FROM python:3.11-slim

# Set the working directory
WORKDIR /app

# Create a non-root user for security
RUN addgroup --system app && adduser --system --group app

# Copy the pre-built wheels from the builder stage
COPY --from=builder /wheels /wheels

# Install the dependencies from the wheels
RUN pip install --no-cache /wheels/*

# Copy the rest of the application code
COPY . .

# Change ownership of the files to the non-root user
RUN chown -R app:app /app

# Switch to the non-root user
USER app

# Expose the port the app runs on
EXPOSE 8000

# The command to run the application
# Use 0.0.0.0 to make it accessible from outside the container
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]